Search.setIndex({"docnames": ["index", "modules", "scikit_quri", "scikit_quri.circuit", "scikit_quri.qkrr", "scikit_quri.qnn", "scikit_quri.qsvm"], "filenames": ["index.rst", "modules.rst", "scikit_quri.rst", "scikit_quri.circuit.rst", "scikit_quri.qkrr.rst", "scikit_quri.qnn.rst", "scikit_quri.qsvm.rst"], "titles": ["Welcome to scikit-quri\u2019s documentation!", "scikit-quri", "scikit_quri package", "scikit_quri.circuit package", "scikit_quri.qkrr package", "scikit_quri.qnn package", "scikit_quri.qsvm package"], "terms": {"i": [0, 3, 5], "librari": 0, "quantum": [0, 3, 4, 5], "neural": [0, 5], "network": [0, 5], "thi": [0, 3, 5], "base": [0, 3, 4, 5, 6], "qulac": [0, 3, 5], "name": 0, "after": 0, "part": [0, 3], "an": 0, "open": 0, "sourc": [0, 3, 4, 5, 6], "suit": 0, "creat": [0, 3], "execut": 0, "algorithm": 0, "variou": 0, "comput": [0, 5], "simul": [0, 3, 5], "scikit_quri": [0, 1], "packag": [0, 1], "subpackag": 1, "circuit": [1, 2, 4, 5, 6], "submodul": [1, 2], "modul": 1, "pre_defin": [1, 2], "content": 1, "qkrr": [1, 2], "qnn": [1, 2, 3], "classifi": [1, 2], "regressor": [1, 2, 4], "gener": [1, 2], "kernel_tsn": [1, 2], "qsvm": [1, 2], "qsvc": [1, 2], "qsvr": [1, 2], "learningcircuit": [2, 3, 4, 5, 6], "n_qubit": [2, 3, 5], "input_funct": [2, 3], "add_gat": [2, 3], "add_x_gat": [2, 3], "add_y_g": [2, 3], "add_z_gat": [2, 3], "add_rx_gat": [2, 3], "add_ry_g": [2, 3], "add_rz_gat": [2, 3], "add_cnot_g": [2, 3], "add_h_gat": [2, 3], "add_input_rx_g": [2, 3], "add_input_ry_g": [2, 3], "add_input_rz_g": [2, 3], "add_parametric_rx_g": [2, 3], "add_parametric_ry_g": [2, 3], "add_parametric_rz_g": [2, 3], "add_parametric_multi_pauli_rotation_g": [2, 3], "add_parametric_input_rx_g": [2, 3], "add_parametric_input_ry_g": [2, 3], "add_parametric_input_rz_g": [2, 3], "parameter_count": [2, 3], "input_params_count": [2, 3], "learning_params_count": [2, 3], "get_learning_param_index": [2, 3], "get_minimum_learning_param_index": [2, 3], "get_input_params_index": [2, 3], "update_paramet": [2, 3], "bind_input_and_paramet": [2, 3], "generate_bound_param": [2, 3], "backprop_innner_product": [2, 3], "to_batch": [2, 3], "preprocess_x": [2, 3], "cz": [2, 3], "cnot": [2, 3], "create_qcl_ansatz": [2, 3, 5], "create_farhi_neven_ansatz": [2, 3], "create_ibm_embedding_circuit": [2, 3], "create_dqn_cl": [2, 3], "create_dqn_cl_no_cz": [2, 3], "create_qcnn_ansatz": [2, 3], "run_circuit": [2, 4, 6], "fit": [2, 3, 4, 5, 6], "predict": [2, 4, 5, 6], "qnnclassifi": [2, 5], "ansatz": [2, 5], "num_class": [2, 5], "estim": [2, 5], "gradient_estim": [2, 5], "optim": [2, 5], "oper": [2, 5], "x_norm_rang": [2, 5], "y_norm_rang": [2, 5], "do_x_scal": [2, 5], "do_y_scal": [2, 5], "n_output": [2, 5], "y_exp_ratio": [2, 5], "trained_param": [2, 5], "predict_inner_cach": [2, 5], "cost_func": [2, 5], "cost_func_grad": [2, 5], "qnnregressor": [2, 3, 5], "cost_fn": [2, 5], "grad_fn": [2, 5], "qnngener": [2, 5], "fit_direct_distribut": [2, 5], "conv": [2, 5], "pqc_f_helper": [2, 5], "get": [2, 5], "overlap_estim": [2, 5], "calc_all_qula_st": [2, 5], "tsne": [2, 5], "calc_probabilities_p": [2, 5], "calc_probabilities_p_st": [2, 5], "calc_probabilities_q": [2, 5], "joint_prob": [2, 5], "binary_search_perplex": [2, 5], "kldiv": [2, 5], "cdist": [2, 5], "quantum_kernel_tsn": [2, 5], "init": [2, 5], "calc_loss": [2, 5], "calc_grad": [2, 5], "cost_f": [2, 5], "generate_x_train_st": [2, 5], "train": [2, 4, 5], "transform": [2, 5], "calc_i": [2, 5], "input_quantum_st": [2, 5], "calc_fidel": [2, 5], "calc_fidelity_al": [2, 5], "plot": [2, 5], "class": [3, 4, 5, 6], "int": [3, 4, 5, 6], "object": [3, 4, 5, 6], "paramet": [3, 4, 5, 6], "parametricquantumcircuit": 3, "dict": [3, 5], "callabl": [3, 5], "numpi": 3, "ndarrai": [3, 4, 5, 6], "ani": [3, 4, 5, 6], "dtype": [3, 4, 5, 6], "float64": [3, 4, 5, 6], "float": [3, 5], "gate": 3, "add": 3, "arbitrari": 3, "quantumg": 3, "return": [3, 4, 5, 6], "type": [3, 4, 5, 6], "none": [3, 4, 5, 6], "index": 3, "qubit": [3, 5], "x": [3, 4, 5, 6], "y": [3, 4, 5, 6], "z": [3, 5], "angl": 3, "rx": 3, "rotat": 3, "ry": 3, "rz": 3, "control_index": 3, "target_index": 3, "control": 3, "target": 3, "put": 3, "h": 3, "share_with": 3, "share_with_coef": 3, "option": [3, 5], "pauli_id": 3, "list": [3, 4, 5], "input_func": 3, "function": [3, 5], "lambda": 3, "properti": 3, "immutableboundparametricquantumcircuit": 3, "theta": [3, 5], "sequenc": [3, 5], "state": [3, 5], "backprop": 3, "self": 3, "qulacs\u306b\u56de\u8def\u3092\u5909\u63db\u3057inner_product\u3067backprop\u3057\u307e\u3059": 3, "quantumst": 3, "data": [3, 5], "scaluq": 3, "quri": [3, 5], "\u306b\u6d41\u3059\u305f\u3081\u306emethod": 3, "n_data": [3, 5], "n_featur": [3, 5], "n_param": 3, "unboundparametricquantumcircuit": 3, "param": [3, 4, 5], "batched_param": 3, "c_depth": [3, 5], "time_step": [3, 5], "0": [3, 5], "5": [3, 5], "seed": 3, "us": [3, 5], "page": 3, "http": 3, "dojo": 3, "org": 3, "ja": 3, "latest": 3, "notebook": 3, "2_quantum_circuit_learn": 3, "html": 3, "number": [3, 5], "depth": [3, 5], "evolut": 3, "time": 3, "hamiltonian": 3, "dynam": 3, "random": 3, "determin": 3, "interact": 3, "strength": 3, "exampl": [3, 5], "4": 3, "3": [3, 5], "x_train": [3, 5], "y_train": [3, 5], "propos": 3, "arxiv": 3, "ab": 3, "1802": 3, "06002": 3, "s_qubit": 3, "www": 3, "tensorflow": 3, "tutori": 3, "qcnn": 3, "hl": 3, "en": 3, "section": 3, "1": [3, 5], "must": [3, 5], "even": 3, "n_iter": 4, "10": [4, 5], "solv": [4, 5], "regress": [4, 5], "problem": [4, 5], "kernel": [4, 5], "ridg": 4, "machin": 4, "input": [4, 5], "teacher": 4, "valu": [4, 5], "int64": [4, 5, 6], "each": [4, 5], "make": [4, 5], "factori": 5, "7": 5, "true": [5, 6], "2": 5, "classif": 5, "The": 5, "made": 5, "vector": 5, "which": 5, "one": 5, "hot": 5, "encod": 5, "label": 5, "take": 5, "expect": 5, "pauli": 5, "z_i": 5, "softmax": 5, "z_0": 5, "z_1": 5, "z_": 5, "n": 5, "learn": 5, "measur": 5, "union": 5, "paulilabel": 5, "circuitquantumst": 5, "quantumstatevector": 5, "iter": 5, "complex": 5, "It": 5, "concurr": 5, "_parametricstatet": 5, "gradient": 5, "solver": 5, "adam": 5, "lbfg": 5, "method": 5, "bool": [5, 6], "npt": 5, "np": 5, "tupl": 5, "byte": 5, "from": 5, "import": 5, "quri_part": 5, "core": 5, "create_numerical_gradient_estim": 5, "create_qulacs_vector_concurrent_estim": 5, "create_qulacs_vector_concurrent_parametric_estim": 5, "algo": 5, "nqubit": 5, "delta": 5, "1e": 5, "maxit": 5, "y_pred": 5, "x_test": 5, "argmax": 5, "axi": 5, "100": 5, "whose": 5, "shape": 5, "n_sampl": 5, "repres": 5, "integ": 5, "maximum": 5, "outcom": 5, "probabl": 5, "x_scale": 5, "out": 5, "taken": 5, "act": 5, "first": 5, "e": 5, "output": 5, "create_parameter_shift_gradient_estim": 5, "20": 5, "model": 5, "batch_siz": 5, "sampl": 5, "batch": 5, "y_scale": 5, "calcul": 5, "cost": 5, "x_batch": 5, "y_batch": 5, "grad": 5, "kernel_typ": 5, "gauss_sigma": 5, "fitting_qubit": 5, "onli": 5, "work": 5, "depend": 5, "real": 5, "liter": 5, "gauss": 5, "exp_ham": 5, "same": 5, "implement": 5, "yet": 5, "sigma": 5, "gaussian": 5, "train_data": 5, "train_scal": 5, "data_diff": 5, "pqs_f": 5, "\u5165\u529b\u30c7\u30fc\u30bfx\u306b\u5bfe\u3057\u3066": 5, "\u91cf\u5b50\u56de\u8def\u3092\u8a08\u7b97\u3057\u3066cache\u3057\u3066\u304a\u304fclass": 5, "generalcircuitquantumst": 5, "cache\u3055\u308c\u305f\u91cf\u5b50\u72b6\u614b\u3092\u8fd4\u3059": 5, "\u3082\u3057cache\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u8a08\u7b97\u3057\u3066cache\u3059\u308b": 5, "\u5165\u529b\u30c7\u30fc\u30bfx": 5, "\u91cf\u5b50\u72b6\u614b": 5, "parts\u306eoverlap_estimator\u306e\u4ee3\u66ffclass": 5, "500\u306e\u3068\u304d": 5, "x60": 5, "faster": 5, "cache\u7528\u306b\u4e88\u3081\u5168\u3066\u306e\u91cf\u5b50\u72b6\u614b\u3092qulacs\u306estate\u306b\u5909\u63db": 5, "j": 5, "\u4e0e\u3048\u3089\u308c\u305f\u91cf\u5b50\u72b6\u614b\u306ei\u756a\u76ee\u3068j\u756a\u76ee\u306e\u5185\u7a4d\u306e\u7d76\u5bfe\u5024\u306e\u4e8c\u4e57\u3092\u8a08\u7b97": 5, "\u91cf\u5b50\u72b6\u614b\u306eindex": 5, "ket": 5, "bra": 5, "\u03c6i": 5, "\u03c6j": 5, "perplex": 5, "30": 5, "\u57fa\u672c\u7684\u306atsne\u306e\u5b9f\u88c5": 5, "p\u884c\u5217\u3092\u8a08\u7b97\u3059\u308b": 5, "\u5165\u529b\u30c7\u30fc\u30bf": 5, "t": 5, "sne\u306ep\u884c\u5217": 5, "x_train\u306e\u30b5\u30a4\u30ba": 5, "p_prob": 5, "x_train_stat": 5, "\u91cf\u5b50\u72b6\u614b\u306b\u5909\u63db\u3057\u305f\u5165\u529b\u30c7\u30fc\u30bf": 5, "c_data": 5, "q\u884c\u5217\u3092\u8a08\u7b97\u3059\u308b": 5, "\u8ad6\u6587\u3067\u306fy": 5, "sne\u306eq\u884c\u5217": 5, "c_data\u306e\u30b5\u30a4\u30ba": 5, "q_prob": 5, "sq_distanc": 5, "\u4e8c\u5206\u63a2\u7d22\u3067\u5206\u6563\u3092perplexity\u306b\u3059\u308b": 5, "x_tr": 5, "distanc": 5, "euclidean": 5, "between": 5, "max_it": 5, "400": 5, "sne\u3067\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306eclass": 5, "pqc_f": 5, "\u91cf\u5b50\u56de\u8def\u3092\u8fd4\u3059\u95a2\u6570": 5, "\u91cf\u5b50\u56de\u8def\u306e\u30d1\u30e9\u30e1\u30fc\u30bf": 5, "\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306eloss\u3092\u8a08\u7b97": 5, "p_ij": 5, "q_ij": 5, "alpha": 5, "fidel": 5, "ndaarrai": 5, "\u304b\u3089\u91cf\u5b50\u72b6\u614b\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210": 5, "64\u5165\u529b\u30c7\u30fc\u30bf": 5, "\u91cf\u5b50\u72b6\u614b\u306e\u30ea\u30b9\u30c8": 5, "y_label": 5, "powel": 5, "int8": 5, "\u5b66\u7fd2\u3057\u305f\u03b1\u3092\u4f7f\u3063\u3066y\u3092\u8a08\u7b97": 5, "\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf": 5, "\u4f4e\u6b21\u5143\u8868\u73fe": 5, "fidelity\u3068\u03b1\u304b\u3089y\u3092\u8a08\u7b97": 5, "\u03b1": 5, "\u5165\u529b\u30c7\u30fc\u30bfx\u3068pqc_f": 5, "theta\u3092\u53d7\u3051\u53d6\u3063\u3066": 5, "\u91cf\u5b50\u72b6\u614b\u3092\u8a08\u7b97\u3059\u308b": 5, "data_tr": 5, "pqs_f_helper": 5, "data_tr\u306e\u5834\u5408": 5, "\u3092\u8a08\u7b97": 5, "titl": 5, "y\u3092plot\u3059\u308b": 5, "\u30e9\u30d9\u30eb": 5, "str": 5, "\u30bf\u30a4\u30c8\u30eb": 5, "sim": 6, "sampling_backend": 6, "n_shot": 6, "1000": 6}, "objects": {"": [[2, 0, 0, "-", "scikit_quri"]], "scikit_quri": [[3, 0, 0, "-", "circuit"], [4, 0, 0, "-", "qkrr"], [5, 0, 0, "-", "qnn"], [6, 0, 0, "-", "qsvm"]], "scikit_quri.circuit": [[3, 0, 0, "-", "circuit"], [3, 0, 0, "-", "pre_defined"]], "scikit_quri.circuit.circuit": [[3, 1, 1, "", "LearningCircuit"], [3, 5, 1, "", "preprocess_x"]], "scikit_quri.circuit.circuit.LearningCircuit": [[3, 2, 1, "", "add_CNOT_gate"], [3, 2, 1, "", "add_H_gate"], [3, 2, 1, "", "add_RX_gate"], [3, 2, 1, "", "add_RY_gate"], [3, 2, 1, "", "add_RZ_gate"], [3, 2, 1, "", "add_X_gate"], [3, 2, 1, "", "add_Y_gate"], [3, 2, 1, "", "add_Z_gate"], [3, 2, 1, "", "add_gate"], [3, 2, 1, "", "add_input_RX_gate"], [3, 2, 1, "", "add_input_RY_gate"], [3, 2, 1, "", "add_input_RZ_gate"], [3, 2, 1, "", "add_parametric_RX_gate"], [3, 2, 1, "", "add_parametric_RY_gate"], [3, 2, 1, "", "add_parametric_RZ_gate"], [3, 2, 1, "", "add_parametric_input_RX_gate"], [3, 2, 1, "", "add_parametric_input_RY_gate"], [3, 2, 1, "", "add_parametric_input_RZ_gate"], [3, 2, 1, "", "add_parametric_multi_Pauli_rotation_gate"], [3, 2, 1, "", "backprop_innner_product"], [3, 2, 1, "", "bind_input_and_parameters"], [3, 3, 1, "", "circuit"], [3, 2, 1, "", "generate_bound_params"], [3, 2, 1, "", "get_input_params_indexes"], [3, 2, 1, "", "get_learning_param_indexes"], [3, 2, 1, "", "get_minimum_learning_param_indexes"], [3, 3, 1, "", "input_functions"], [3, 4, 1, "", "input_params_count"], [3, 4, 1, "", "learning_params_count"], [3, 3, 1, "", "n_qubits"], [3, 4, 1, "", "parameter_count"], [3, 2, 1, "", "to_batched"], [3, 2, 1, "", "update_parameters"]], "scikit_quri.circuit.pre_defined": [[3, 5, 1, "", "CNOT"], [3, 5, 1, "", "CZ"], [3, 5, 1, "", "create_dqn_cl"], [3, 5, 1, "", "create_dqn_cl_no_cz"], [3, 5, 1, "", "create_farhi_neven_ansatz"], [3, 5, 1, "", "create_ibm_embedding_circuit"], [3, 5, 1, "", "create_qcl_ansatz"], [3, 5, 1, "", "create_qcnn_ansatz"], [3, 5, 1, "", "preprocess_x"]], "scikit_quri.qkrr": [[4, 0, 0, "-", "qkrr"]], "scikit_quri.qkrr.qkrr": [[4, 1, 1, "", "QKRR"]], "scikit_quri.qkrr.qkrr.QKRR": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "run_circuit"]], "scikit_quri.qnn": [[5, 0, 0, "-", "classifier"], [5, 0, 0, "-", "generation"], [5, 0, 0, "-", "kernel_tsne"], [5, 0, 0, "-", "regressor"]], "scikit_quri.qnn.classifier": [[5, 1, 1, "", "QNNClassifier"]], "scikit_quri.qnn.classifier.QNNClassifier": [[5, 3, 1, "", "ansatz"], [5, 2, 1, "", "cost_func"], [5, 2, 1, "", "cost_func_grad"], [5, 3, 1, "", "do_x_scale"], [5, 3, 1, "", "do_y_scale"], [5, 3, 1, "", "estimator"], [5, 2, 1, "", "fit"], [5, 3, 1, "", "gradient_estimator"], [5, 3, 1, "", "n_outputs"], [5, 3, 1, "", "n_qubit"], [5, 3, 1, "", "num_class"], [5, 3, 1, "", "operator"], [5, 3, 1, "", "optimizer"], [5, 2, 1, "", "predict"], [5, 3, 1, "", "predict_inner_cache"], [5, 3, 1, "", "trained_param"], [5, 3, 1, "", "x_norm_range"], [5, 3, 1, "", "y_exp_ratio"], [5, 3, 1, "", "y_norm_range"]], "scikit_quri.qnn.generation": [[5, 1, 1, "", "QNNGenerator"]], "scikit_quri.qnn.generation.QNNGenerator": [[5, 2, 1, "", "conving"], [5, 2, 1, "", "cost_func"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_direct_distribution"], [5, 2, 1, "", "predict"]], "scikit_quri.qnn.kernel_tsne": [[5, 1, 1, "", "TSNE"], [5, 1, 1, "", "overlap_estimator"], [5, 1, 1, "", "pqc_f_helper"], [5, 1, 1, "", "quantum_kernel_tsne"]], "scikit_quri.qnn.kernel_tsne.TSNE": [[5, 2, 1, "", "binary_search_perplexity"], [5, 2, 1, "", "calc_probabilities_p"], [5, 2, 1, "", "calc_probabilities_p_state"], [5, 2, 1, "", "calc_probabilities_q"], [5, 2, 1, "", "cdist"], [5, 2, 1, "", "joint_probabilities"], [5, 2, 1, "", "kldiv"]], "scikit_quri.qnn.kernel_tsne.overlap_estimator": [[5, 2, 1, "", "calc_all_qula_states"], [5, 2, 1, "", "estimate"]], "scikit_quri.qnn.kernel_tsne.pqc_f_helper": [[5, 2, 1, "", "get"]], "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne": [[5, 2, 1, "", "calc_fidelity"], [5, 2, 1, "", "calc_fidelity_all"], [5, 2, 1, "", "calc_grad"], [5, 2, 1, "", "calc_loss"], [5, 2, 1, "", "calc_y"], [5, 2, 1, "", "cost_f"], [5, 2, 1, "", "generate_X_train_state"], [5, 2, 1, "", "init"], [5, 2, 1, "", "input_quantum_state"], [5, 2, 1, "", "plot"], [5, 2, 1, "", "train"], [5, 2, 1, "", "transform"]], "scikit_quri.qnn.regressor": [[5, 1, 1, "", "QNNRegressor"]], "scikit_quri.qnn.regressor.QNNRegressor": [[5, 3, 1, "", "ansatz"], [5, 2, 1, "", "cost_fn"], [5, 3, 1, "", "do_x_scale"], [5, 3, 1, "", "do_y_scale"], [5, 3, 1, "", "estimator"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "grad_fn"], [5, 3, 1, "", "gradient_estimator"], [5, 3, 1, "", "n_outputs"], [5, 3, 1, "", "n_qubit"], [5, 3, 1, "", "operator"], [5, 3, 1, "", "optimizer"], [5, 2, 1, "", "predict"], [5, 3, 1, "", "trained_param"], [5, 3, 1, "", "x_norm_range"], [5, 3, 1, "", "y_exp_ratio"], [5, 3, 1, "", "y_norm_range"]], "scikit_quri.qsvm": [[6, 0, 0, "-", "qsvc"], [6, 0, 0, "-", "qsvr"]], "scikit_quri.qsvm.qsvc": [[6, 1, 1, "", "QSVC"]], "scikit_quri.qsvm.qsvc.QSVC": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run_circuit"]], "scikit_quri.qsvm.qsvr": [[6, 1, 1, "", "QSVR"]], "scikit_quri.qsvm.qsvr.QSVR": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "run_circuit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "scikit": [0, 1], "quri": [0, 1], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6], "scikit_quri": [2, 3, 4, 5, 6], "packag": [2, 3, 4, 5, 6], "subpackag": 2, "modul": [2, 3, 4, 5, 6], "circuit": 3, "submodul": [3, 4, 5, 6], "pre_defin": 3, "qkrr": 4, "qnn": 5, "classifi": 5, "regressor": 5, "gener": 5, "kernel_tsn": 5, "qsvm": 6, "qsvc": 6, "qsvr": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to scikit-quri\u2019s documentation!": [[0, "welcome-to-scikit-quri-s-documentation"]], "Contents:": [[0, null]], "scikit-quri": [[1, "scikit-quri"]], "scikit_quri package": [[2, "scikit-quri-package"]], "Subpackages": [[2, "subpackages"]], "Module contents": [[2, "module-scikit_quri"], [3, "module-scikit_quri.circuit"], [4, "module-scikit_quri.qkrr"], [5, "module-scikit_quri.qnn"], [6, "module-scikit_quri.qsvm"]], "scikit_quri.circuit package": [[3, "scikit-quri-circuit-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "scikit_quri.circuit.circuit module": [[3, "module-scikit_quri.circuit.circuit"]], "scikit_quri.circuit.pre_defined module": [[3, "module-scikit_quri.circuit.pre_defined"]], "scikit_quri.qkrr package": [[4, "scikit-quri-qkrr-package"]], "scikit_quri.qkrr.qkrr module": [[4, "module-scikit_quri.qkrr.qkrr"]], "scikit_quri.qnn package": [[5, "scikit-quri-qnn-package"]], "scikit_quri.qnn.classifier module": [[5, "module-scikit_quri.qnn.classifier"]], "scikit_quri.qnn.regressor module": [[5, "module-scikit_quri.qnn.regressor"]], "scikit_quri.qnn.generation module": [[5, "module-scikit_quri.qnn.generation"]], "scikit_quri.qnn.kernel_tsne module": [[5, "module-scikit_quri.qnn.kernel_tsne"]], "scikit_quri.qsvm package": [[6, "scikit-quri-qsvm-package"]], "scikit_quri.qsvm.qsvc module": [[6, "module-scikit_quri.qsvm.qsvc"]], "scikit_quri.qsvm.qsvr module": [[6, "module-scikit_quri.qsvm.qsvr"]]}, "indexentries": {"module": [[2, "module-scikit_quri"], [3, "module-scikit_quri.circuit"], [3, "module-scikit_quri.circuit.circuit"], [3, "module-scikit_quri.circuit.pre_defined"], [4, "module-scikit_quri.qkrr"], [4, "module-scikit_quri.qkrr.qkrr"], [5, "module-scikit_quri.qnn"], [5, "module-scikit_quri.qnn.classifier"], [5, "module-scikit_quri.qnn.generation"], [5, "module-scikit_quri.qnn.kernel_tsne"], [5, "module-scikit_quri.qnn.regressor"], [6, "module-scikit_quri.qsvm"], [6, "module-scikit_quri.qsvm.qsvc"], [6, "module-scikit_quri.qsvm.qsvr"]], "scikit_quri": [[2, "module-scikit_quri"]], "cnot() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.CNOT"]], "cz() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.CZ"]], "learningcircuit (class in scikit_quri.circuit.circuit)": [[3, "scikit_quri.circuit.circuit.LearningCircuit"]], "add_cnot_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_CNOT_gate"]], "add_h_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_H_gate"]], "add_rx_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_RX_gate"]], "add_ry_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_RY_gate"]], "add_rz_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_RZ_gate"]], "add_x_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_X_gate"]], "add_y_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_Y_gate"]], "add_z_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_Z_gate"]], "add_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_gate"]], "add_input_rx_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_input_RX_gate"]], "add_input_ry_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_input_RY_gate"]], "add_input_rz_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_input_RZ_gate"]], "add_parametric_rx_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_RX_gate"]], "add_parametric_ry_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_RY_gate"]], "add_parametric_rz_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_RZ_gate"]], "add_parametric_input_rx_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_input_RX_gate"]], "add_parametric_input_ry_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_input_RY_gate"]], "add_parametric_input_rz_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_input_RZ_gate"]], "add_parametric_multi_pauli_rotation_gate() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.add_parametric_multi_Pauli_rotation_gate"]], "backprop_innner_product() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.backprop_innner_product"]], "bind_input_and_parameters() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.bind_input_and_parameters"]], "circuit (scikit_quri.circuit.circuit.learningcircuit attribute)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.circuit"]], "create_dqn_cl() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_dqn_cl"]], "create_dqn_cl_no_cz() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_dqn_cl_no_cz"]], "create_farhi_neven_ansatz() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_farhi_neven_ansatz"]], "create_ibm_embedding_circuit() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_ibm_embedding_circuit"]], "create_qcl_ansatz() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_qcl_ansatz"]], "create_qcnn_ansatz() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.create_qcnn_ansatz"]], "generate_bound_params() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.generate_bound_params"]], "get_input_params_indexes() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.get_input_params_indexes"]], "get_learning_param_indexes() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.get_learning_param_indexes"]], "get_minimum_learning_param_indexes() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.get_minimum_learning_param_indexes"]], "input_functions (scikit_quri.circuit.circuit.learningcircuit attribute)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.input_functions"]], "input_params_count (scikit_quri.circuit.circuit.learningcircuit property)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.input_params_count"]], "learning_params_count (scikit_quri.circuit.circuit.learningcircuit property)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.learning_params_count"]], "n_qubits (scikit_quri.circuit.circuit.learningcircuit attribute)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.n_qubits"]], "parameter_count (scikit_quri.circuit.circuit.learningcircuit property)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.parameter_count"]], "preprocess_x() (in module scikit_quri.circuit.circuit)": [[3, "scikit_quri.circuit.circuit.preprocess_x"]], "preprocess_x() (in module scikit_quri.circuit.pre_defined)": [[3, "scikit_quri.circuit.pre_defined.preprocess_x"]], "scikit_quri.circuit": [[3, "module-scikit_quri.circuit"]], "scikit_quri.circuit.circuit": [[3, "module-scikit_quri.circuit.circuit"]], "scikit_quri.circuit.pre_defined": [[3, "module-scikit_quri.circuit.pre_defined"]], "to_batched() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.to_batched"]], "update_parameters() (scikit_quri.circuit.circuit.learningcircuit method)": [[3, "scikit_quri.circuit.circuit.LearningCircuit.update_parameters"]], "qkrr (class in scikit_quri.qkrr.qkrr)": [[4, "scikit_quri.qkrr.qkrr.QKRR"]], "fit() (scikit_quri.qkrr.qkrr.qkrr method)": [[4, "scikit_quri.qkrr.qkrr.QKRR.fit"]], "predict() (scikit_quri.qkrr.qkrr.qkrr method)": [[4, "scikit_quri.qkrr.qkrr.QKRR.predict"]], "run_circuit() (scikit_quri.qkrr.qkrr.qkrr method)": [[4, "scikit_quri.qkrr.qkrr.QKRR.run_circuit"]], "scikit_quri.qkrr": [[4, "module-scikit_quri.qkrr"]], "scikit_quri.qkrr.qkrr": [[4, "module-scikit_quri.qkrr.qkrr"]], "qnnclassifier (class in scikit_quri.qnn.classifier)": [[5, "scikit_quri.qnn.classifier.QNNClassifier"]], "qnngenerator (class in scikit_quri.qnn.generation)": [[5, "scikit_quri.qnn.generation.QNNGenerator"]], "qnnregressor (class in scikit_quri.qnn.regressor)": [[5, "scikit_quri.qnn.regressor.QNNRegressor"]], "tsne (class in scikit_quri.qnn.kernel_tsne)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE"]], "ansatz (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.ansatz"]], "ansatz (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.ansatz"]], "binary_search_perplexity() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.binary_search_perplexity"]], "calc_all_qula_states() (scikit_quri.qnn.kernel_tsne.overlap_estimator method)": [[5, "scikit_quri.qnn.kernel_tsne.overlap_estimator.calc_all_qula_states"]], "calc_fidelity() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.calc_fidelity"]], "calc_fidelity_all() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.calc_fidelity_all"]], "calc_grad() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.calc_grad"]], "calc_loss() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.calc_loss"]], "calc_probabilities_p() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.calc_probabilities_p"]], "calc_probabilities_p_state() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.calc_probabilities_p_state"]], "calc_probabilities_q() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.calc_probabilities_q"]], "calc_y() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.calc_y"]], "cdist() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.cdist"]], "conving() (scikit_quri.qnn.generation.qnngenerator method)": [[5, "scikit_quri.qnn.generation.QNNGenerator.conving"]], "cost_f() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.cost_f"]], "cost_fn() (scikit_quri.qnn.regressor.qnnregressor method)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.cost_fn"]], "cost_func() (scikit_quri.qnn.classifier.qnnclassifier method)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.cost_func"]], "cost_func() (scikit_quri.qnn.generation.qnngenerator method)": [[5, "scikit_quri.qnn.generation.QNNGenerator.cost_func"]], "cost_func_grad() (scikit_quri.qnn.classifier.qnnclassifier method)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.cost_func_grad"]], "do_x_scale (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.do_x_scale"]], "do_x_scale (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.do_x_scale"]], "do_y_scale (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.do_y_scale"]], "do_y_scale (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.do_y_scale"]], "estimate() (scikit_quri.qnn.kernel_tsne.overlap_estimator method)": [[5, "scikit_quri.qnn.kernel_tsne.overlap_estimator.estimate"]], "estimator (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.estimator"]], "estimator (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.estimator"]], "fit() (scikit_quri.qnn.classifier.qnnclassifier method)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.fit"]], "fit() (scikit_quri.qnn.generation.qnngenerator method)": [[5, "scikit_quri.qnn.generation.QNNGenerator.fit"]], "fit() (scikit_quri.qnn.regressor.qnnregressor method)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.fit"]], "fit_direct_distribution() (scikit_quri.qnn.generation.qnngenerator method)": [[5, "scikit_quri.qnn.generation.QNNGenerator.fit_direct_distribution"]], "generate_x_train_state() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.generate_X_train_state"]], "get() (scikit_quri.qnn.kernel_tsne.pqc_f_helper method)": [[5, "scikit_quri.qnn.kernel_tsne.pqc_f_helper.get"]], "grad_fn() (scikit_quri.qnn.regressor.qnnregressor method)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.grad_fn"]], "gradient_estimator (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.gradient_estimator"]], "gradient_estimator (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.gradient_estimator"]], "init() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.init"]], "input_quantum_state() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.input_quantum_state"]], "joint_probabilities() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.joint_probabilities"]], "kldiv() (scikit_quri.qnn.kernel_tsne.tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.TSNE.kldiv"]], "n_outputs (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.n_outputs"]], "n_outputs (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.n_outputs"]], "n_qubit (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.n_qubit"]], "n_qubit (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.n_qubit"]], "num_class (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.num_class"]], "operator (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.operator"]], "operator (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.operator"]], "optimizer (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.optimizer"]], "optimizer (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.optimizer"]], "overlap_estimator (class in scikit_quri.qnn.kernel_tsne)": [[5, "scikit_quri.qnn.kernel_tsne.overlap_estimator"]], "plot() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.plot"]], "pqc_f_helper (class in scikit_quri.qnn.kernel_tsne)": [[5, "scikit_quri.qnn.kernel_tsne.pqc_f_helper"]], "predict() (scikit_quri.qnn.classifier.qnnclassifier method)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.predict"]], "predict() (scikit_quri.qnn.generation.qnngenerator method)": [[5, "scikit_quri.qnn.generation.QNNGenerator.predict"]], "predict() (scikit_quri.qnn.regressor.qnnregressor method)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.predict"]], "predict_inner_cache (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.predict_inner_cache"]], "quantum_kernel_tsne (class in scikit_quri.qnn.kernel_tsne)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne"]], "scikit_quri.qnn": [[5, "module-scikit_quri.qnn"]], "scikit_quri.qnn.classifier": [[5, "module-scikit_quri.qnn.classifier"]], "scikit_quri.qnn.generation": [[5, "module-scikit_quri.qnn.generation"]], "scikit_quri.qnn.kernel_tsne": [[5, "module-scikit_quri.qnn.kernel_tsne"]], "scikit_quri.qnn.regressor": [[5, "module-scikit_quri.qnn.regressor"]], "train() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.train"]], "trained_param (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.trained_param"]], "trained_param (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.trained_param"]], "transform() (scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne method)": [[5, "scikit_quri.qnn.kernel_tsne.quantum_kernel_tsne.transform"]], "x_norm_range (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.x_norm_range"]], "x_norm_range (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.x_norm_range"]], "y_exp_ratio (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.y_exp_ratio"]], "y_exp_ratio (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.y_exp_ratio"]], "y_norm_range (scikit_quri.qnn.classifier.qnnclassifier attribute)": [[5, "scikit_quri.qnn.classifier.QNNClassifier.y_norm_range"]], "y_norm_range (scikit_quri.qnn.regressor.qnnregressor attribute)": [[5, "scikit_quri.qnn.regressor.QNNRegressor.y_norm_range"]], "qsvc (class in scikit_quri.qsvm.qsvc)": [[6, "scikit_quri.qsvm.qsvc.QSVC"]], "qsvr (class in scikit_quri.qsvm.qsvr)": [[6, "scikit_quri.qsvm.qsvr.QSVR"]], "fit() (scikit_quri.qsvm.qsvc.qsvc method)": [[6, "scikit_quri.qsvm.qsvc.QSVC.fit"]], "fit() (scikit_quri.qsvm.qsvr.qsvr method)": [[6, "scikit_quri.qsvm.qsvr.QSVR.fit"]], "predict() (scikit_quri.qsvm.qsvc.qsvc method)": [[6, "scikit_quri.qsvm.qsvc.QSVC.predict"]], "predict() (scikit_quri.qsvm.qsvr.qsvr method)": [[6, "scikit_quri.qsvm.qsvr.QSVR.predict"]], "run_circuit() (scikit_quri.qsvm.qsvc.qsvc method)": [[6, "scikit_quri.qsvm.qsvc.QSVC.run_circuit"]], "run_circuit() (scikit_quri.qsvm.qsvr.qsvr method)": [[6, "scikit_quri.qsvm.qsvr.QSVR.run_circuit"]], "scikit_quri.qsvm": [[6, "module-scikit_quri.qsvm"]], "scikit_quri.qsvm.qsvc": [[6, "module-scikit_quri.qsvm.qsvc"]], "scikit_quri.qsvm.qsvr": [[6, "module-scikit_quri.qsvm.qsvr"]]}})